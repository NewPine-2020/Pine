
memalloc(
40 mem_le_rxbuf
216 mem_le_l2capbuf

/* security temp */
4 mem_le_mic
4 mem_le_peer_mic
8 mem_le_skdm
8 mem_le_skds
16 mem_le_peer_ltk
16 mem_le_my_ltk
16 mem_le_mrand


/* ========= le context =========== */
1 mem_le_state
1 mem_le_mode
2 mem_le_tsniff
4 mem_le_anchor
6 mem_le_clk_offset
2 mem_le_receive_window
6 mem_le_plap
1 mem_le_conn_handle
1 mem_le_arq
1 mem_le_ch
1 mem_le_hop
2 mem_le_event_count
4 mem_le_supervision_timer
2 mem_le_instant
1 mem_le_channels
1 mem_le_conn_sm
1 mem_le_op

	/* these 3 should NOT be seperated */
4 mem_le_access
3 mem_le_crcinit
1 mem_le_window_size

	/* these 3 should NOT be seperated */
2 mem_le_slave_latency
2 mem_le_superto
5 mem_le_channel_map

2 mem_le_no_using
1 mem_le_peer_sca

/* should be together */
1 mem_le_att_opcode
2 mem_le_att_handle

1 mem_le_err_code
1 mem_le_ll_pairing_fail_reason

16 mem_le_sk


/* test */
1 mem_le_testtype
2 mem_le_test_sync
2 mem_le_test_pcnt

1 mem_le_notify_len
1 mem_cmd_le_create_conn
20 mem_le_adv_temp

1 mem_le_packet_size
1 mem_le_packet_llid
2 mem_le_payload_ptr
)


xmemalloc(
2 mem_le_dsniff

// parameters
2 mem_le_conn_interval
1 mem_le_scan_enable
2 mem_le_scan_interval
2 mem_le_scan_window

1 mem_le_adv_enable
1 mem_le_adv_data_len
31 mem_le_adv_data
1 mem_le_scan_data_len
31 mem_le_scan_data

2 mem_le_interal_min
2 mem_le_interal_max
2 mem_le_latency
2 mem_le_timeout

//37 mem_le_chmap
1 mem_le_ch_mapped

5 mem_le_new_map
0 mem_le_new_param
1 mem_le_new_transmitwindowsize
2 mem_le_new_transmitwindowoffset
2 mem_le_new_conninterval
2 mem_le_new_connslavelatency
2 mem_le_new_connsupervisiontimeout

1 mem_le_txheader
1 mem_le_txlen
2 mem_le_txpayload
2 mem_le_txcid
1 mem_le_l2cap
1 mem_le_l2cap_response
31 mem_le_txbdy

/* smp related */
5 mem_le_pcnt_tx
5 mem_le_pcnt_rx
4 mem_le_last_mic
4 mem_le_ivm
4 mem_le_ivs
16 mem_le_ltk
1 mem_ltk_exists
16 mem_le_rconfirm
16 mem_le_srand
1 mem_le_iat
1 mem_le_rat
1 mem_le_preq
1 mem_le_preq_iocap
1 mem_le_preq_oob
1 mem_le_preq_auth
1 mem_le_preq_max_keysize
1 mem_le_preq_init_key_distribution
1 mem_le_preq_resp_key_distribution
1 mem_le_pres
1 mem_le_pres_iocap
1 mem_le_pres_oob
1 mem_le_pres_auth
1 mem_le_pres_max_keysize
1 mem_le_pres_init_key_distribution
1 mem_le_pres_resp_key_distribution

1 mem_le_pairing_state
1 mem_le_enc_state
1 mem_le_pairing_mode
4 mem_le_tk
2 mem_le_ediv
8 mem_le_rand
16 mem_le_irk
1 mem_le_fixed_passkey_flag

1 mem_le_secure_connect_enable
1 mem_le_secure_connect_flag
1 mem_le_sc_calc
1 mem_le_secure_connect_state
1 mem_le_sc_confirm_gkey_flag
1 mem_le_sc_local_key_invalid

/* att related */
2 mem_le_pairing_handle
2 mem_le_search_handle_start
2 mem_le_search_handle_end
0 mem_le_att_offset
1 mem_le_search_att_type_length
16 mem_le_search_att_type
2 mem_le_notify_handle
1 mem_le_search_uuid_length
16 mem_le_search_uuid

1 mem_le_handle_data_len
16 mem_le_handle_data



//START of LE adv parameter structure
0 mem_le_adv_param
2 mem_le_adv_interval_min
2 mem_le_adv_interval_max
1 mem_le_adv_type
1 mem_le_adv_own_addr_type
1 mem_le_adv_direct_addr_type
6 mem_le_adv_direct_addr
1 mem_le_adv_channel_map
1 mem_le_adv_filter_policy
//END of LE adv parameter structure

//START of LE conn parameter structure
0 mem_le_conn_param
1 mem_le_conn_peer_addr_type
6 mem_le_conn_peer_addr
1 mem_le_conn_own_addr_type
2 mem_le_conn_interval_min
2 mem_le_conn_interval_max
2 mem_le_conn_latency
2 mem_le_conn_superto
//START of LE conn parameter structure

//START of LE scan parameter structure
0 mem_le_scan_params
1 mem_le_scan_type
1 mem_le_scan_own_addr_type
1 mem_le_scan_filter_policy
//END of LE scan parameter structure

3 mem_le_lap
1 mem_le_uap
2 mem_le_nap
5 mem_le_xtype_fifo


//LE attribute list
4 mem_le_transmit_window
16 mem_le_connection_updata_param

//for continue
2 mem_le_l2cap_size
1 mem_le_packet_len_recved

//for fifo
1 mem_le_tx_buff_used
2 mem_le_tx_ptr0
2 mem_le_tx_ptr1
2 mem_le_tx_ptr2
2 mem_le_tx_ptr3

2 mem_ui_le_uuid_table
2 mem_le_cur_attlist_start_ptr
2 mem_le_cur_handle_start
2 mem_le_cur_handle_end
1 mem_le_cur_uuid_lenth
16 mem_le_cur_uuid

4 mem_notify_handle_pool

1 mem_le_curr_att_len

1 mem_le_signaling_identifier
1 mem_le_more_data
)

(
1636 param_sifs
0x050e08 param_le_version
0x0005 param_le_subversion
0x000001 param_le_features
196 param_le_mtu
16 param_le_scan_interval
16 param_le_scan_window
0x1e0 param_clke_cal_le
0x1000302 param_smp_paring_response		/* for mouse, noinputnooutput */
0x010410 param_smp_key_dist	
0xa0 param_le_sca
)



/* mem_le_conn_sm */
( 
  0x21 CONN_SM_SEND_WRITE_REQ                      
  0x25 CONN_SM_WAIT_WRITE_RES
  0x26 CONN_SM_WAIT_WRITE_RES1
) 
/*LE MOUSE-KB*/
(
1 LE_CONTEXT_STATE_KB
2 LE_CONTEXT_STATE_MOUSE

3 USB_MOUSE_DATA_CMD

1 SEND_MOUSE_DATA_CMD
2 SEND_KB_DATA_CMD
)


  (
  	0 LE_M_STATE_SLAVE1_STANDBY
  	1 LE_M_STATE_SLAVE1_ADVERTISING
  	2 LE_M_STATE_SLAVE1_SCANNING
  	3 LE_M_STATE_SLAVE1_INITIATING
  	4 LE_M_STATE_SLAVE1_CONNECTED
  	5 LE_M_STATE_SLAVE1_RFU_1
  	6 LE_M_STATE_SLAVE1_RFU_2
  	7 LE_M_STATE_SLAVE1_RFU_3
  )

  (
  	0 LE_M_STATE_SLAVE2_STANDBY
  	1 LE_M_STATE_SLAVE2_ADVERTISING
  	2 LE_M_STATE_SLAVE2_SCANNING
  	3 LE_M_STATE_SLAVE2_INITIATING
  	4 LE_M_STATE_SLAVE2_CONNECTED
  	5 LE_M_STATE_SLAVE2_CONNECT_INIT
  	6 LE_M_STATE_SLAVE2_RFU_2
  	7 LE_M_STATE_SLAVE2_RFU_3
  )


/* advertising channel PDU type */
(
0 ADV_IND
1 ADV_DIRECT_IND
2 ADV_NONCONN_IND
3 SCAN_REQ
4 SCAN_RSP
5 CONNECT_REQ
6 ADV_SCAN_IND
)

	/* tx packet type */
	(
	0x20 XT_LL_CONNECTION_UPDATE_REQ
	0x21 XT_LL_CHANNEL_MAP_REQ
	0x22 XT_LL_TERMINATE_IND
	0x23 XT_LL_ENC_REQ
	0x24 XT_LL_ENC_RSP
	0x25 XT_LL_START_ENC_REQ
	0x26 XT_LL_START_ENC_RSP
	0x27 XT_LL_UNKNOWN_RSP
	0x28 XT_LL_FEATURE_REQ
	0x29 XT_LL_FEATURE_RSP
	0x2A XT_LL_PAUSE_ENC_REQ
	0x2B XT_LL_PAUSE_ENC_RSP
	0x2C XT_LL_VERSION_IND
	0x2D XT_LL_REJECT_IND
	0x2E XT_LL_SLAVE_FEATURE_REQ
	0x2F XT_LL_CONNECTION_PARAM_REQ
	0x30 XT_LL_CONNECTION_PARAM_RSP
	0x31 XT_LL_REJECT_IND_EXT
	0x32 XT_LL_PING_REQ
	0x33 XT_LL_PING_RSP
	)


	/* LE control packet type */
	(
	0x00 LL_CONNECTION_UPDATE_REQ
	0x01 LL_CHANNEL_MAP_REQ
	0x02 LL_TERMINATE_IND
	0x03 LL_ENC_REQ
	0x04 LL_ENC_RSP
	0x05 LL_START_ENC_REQ
	0x06 LL_START_ENC_RSP
	0x07 LL_UNKNOWN_RSP
	0x08 LL_FEATURE_REQ
	0x09 LL_FEATURE_RSP
	0x0A LL_PAUSE_ENC_REQ
	0x0B LL_PAUSE_ENC_RSP
	0x0C LL_VERSION_IND
	0x0D LL_REJECT_IND
	0x0E LL_SLAVE_FEATURE_REQ
	0x0F LL_CONNECTION_PARAM_REQ
	0x10 LL_CONNECTION_PARAM_RSP
	0x11 LL_REJECT_IND_EXT
	0x12 LL_PING_REQ
	0x13 LL_PING_RSP
	0x14 LL_LENGTH_REQ
	0x15 LL_LENGTH_RSP
	)

	/* Security Manager Protocol Code */
	(
	0x01 SMP_PAIRING_REQUEST
	0x02 SMP_PAIRING_RESPONSE
	0x03 SMP_PAIRING_CONFIRM
	0x04 SMP_PAIRING_RANDOM
	0x05 SMP_PAIRING_FAILED
	0x06 SMP_ENCRYPTION_INFORMATION
	0x07 SMP_MASTER_IDENTIFICATION
	0x08 SMP_IDENTITY_INFORMATION
	0x09 SMP_IDENTITY_ADDRESS_INFORMATION
	0x0A SMP_SIGNING_INFORMATION
	0x0B SMP_SECURITY_REQUEST
	0x0c SMP_PAIRING_PUBLIC_KEY
	0x0d SMP_PAIRING_DHKEY_CHECK
	)

	/* ATT OPCODE */
	(
	0x01 ATTOP_ERROR_RESPONSE
	0x02 ATTOP_EXCHANGE_MTU_REQUEST
	0x03 ATTOP_EXCHANGE_MTU_RESPONSE
	0x04 ATTOP_FIND_INFORMATION_REQUEST
	0x05 ATTOP_FIND_INFORMATION_RESPONSE
	0x06 ATTOP_FIND_BY_TYPE_VALUE_REQUEST
	0x07 ATTOP_FIND_BY_TYPE_VALUE_RESPONSE
	0x08 ATTOP_READ_BY_TYPE_REQUEST
	0x09 ATTOP_READ_BY_TYPE_RESPONSE
	0x0A ATTOP_READ_REQUEST
	0x0B ATTOP_READ_RESPONSE
	0x0C ATTOP_READ_BLOB_REQUEST
	0x0D ATTOP_READ_BLOB_RESPONSE
	0x0E ATTOP_READ_MULTIPLE_REQUEST
	0x0F ATTOP_READ_MULTIPLE_RESPONSE
	0x10 ATTOP_READ_BY_GROUP_TYPE_REQUEST
	0x11 ATTOP_READ_BY_GROUP_TYPE_RESPONSE
	0x12 ATTOP_WRITE_REQUEST
	0x13 ATTOP_WRITE_RESPONSE
	0x16 ATTOP_PREPARE_WRITE_REQUEST
	0x17 ATTOP_PREPARE_WRITE_RESPONSE
	0x18 ATTOP_EXECUTE_WRITE_REQUEST
	0x19 ATTOP_EXECUTE_WRITE_RESPONSE
	0x1B ATTOP_HANDLE_VALUE_NOTIFICATION
	0x1D ATTOP_HANDLE_VALUE_INDICATION
	0x1E ATTOP_HANDLE_VALUE_CONFIRMATION
	0x52 ATTOP_WRITE_COMMAND
	0xD2 ATTOP_SIGNED_WRITE_COMMAND
	0x9e EMPTY_LE_DATA_PRE
	0x9f EMPTY_LE_DATA
	)

	/* L2CAP Signaling OPCODE */
	(
	0x12 L2CAP_CONNECTION_PARAMETER_UPDATE_REQUEST
	0x13 L2CAP_CONNECTION_PARAMETER_UPDATE_RESPONSE
	)

	/* ATT error code */
	(
	0x01 ATT_ERR_INVALID_HANDLE
	0x02 ATT_ERR_READ_NOT_PERMITTED
	0x03 ATT_ERR_WRITE_NOT_PERMITTED
	0x04 ATT_ERR_INVALID_PDU
	0x05 ATT_ERR_INSUFFICIENT_AUTHENTICATION
	0x06 ATT_ERR_REQUEST_NOT_SUPPORTED
	0x07 ATT_ERR_INVALID_OFFSET
	0x08 ATT_ERR_INSUFFICIENT_AUTHORIZATION
	0x09 ATT_ERR_PREPARE_QUEUE_FULL
	0x0A ATT_ERR_ATTRIBUTE_NOT_FOUND
	0x0B ATT_ERR_ATTRIBUTE_NOT_LONG
	0x0C ATT_ERR_INSUFFICIENT_ENCRYPTION_KEY_SIZE
	0x0D ATT_ERR_INVALID_ATTRIBUTE_VALUE_LENGTH
	0x0E ATT_ERR_UNLIKELY_ERROR
	0x0F ATT_ERR_INSUFFICIENT_ENCRYPTION
	0x10 ATT_ERR_UNSUPPORTED_GROUP_TYPE
	0x11 ATT_ERR_INSUFFICIENT_RESOURCES
	)

	(// pairing failed reason
	0x00 PAIRING_FAILED_RESERVED
	0X01 PAIRING_FAILED_PASSKEY_ENTRY_FAILED
	0X02 PAIRING_FAILED_OOB_NOT_AVAILABLE
	0X03 PAIRING_FAILED_AUTHENTICATION_REQUIRE
	0X04 PAIRING_FAILED_CONFIRM_VALUE_FAILED
	0X05 PAIRING_FAILED_PAIRING_NOT_SUPPORTED
	0X06 PAIRING_FAILED_ENCRYPTION_KEY_SIZE
	0X07 PAIRING_FAILED_COMMAND_NOT_SUPPORTED
	0X08 PAIRING_FAILED_UNSPECIFIED_REASON
	0X09 PAIRING_FAILED_REPEATED_ATTEMPTS
	0X0A PAIRING_FAILED_INVALID_PARAMETERS
	0X0B PAIRING_FAILED_DHKEY_CHECK_FAILED
	0X0C PAIRING_FAILED_NUMERIC_COMPARISON_FAILED
	0X0D PAIRING_FAILED_BR_EDR_PAIRING_IN_PROGRESS
	0X0E PAIRING_FAILED_KEY_DERIVATION_GENERATION_NOT_ALLOWED
	)
	
	(//reject reason
	0x06 LE_ERR_PIN_OR_KEY_MISSING
	)
	
	/*	SERVICE UUID	*/
	(
	0x1800 UUID_SERVICE_GENERIC_ACC
	0x1801 UUID_SERVICE_GENERIC_ATT
	0x180a UUID_SERVICE_DEVICE_INFO
	0x180f UUID_SERVICE_BATTERY
	0x1812 UUID_SERVICE_HIDS
	0x2800 UUID_GATT_PRIMARY_SERVICE
	0x2801 UUID_GATT_SECONDARY_SERVICE
	0X2802 UUID_GATT_INCLUDE
	0X2803 UUID_GATT_CHARACTERISTIC
	0X2A00 UUID_CHRCTR_DEVICE_NAME
	0X2A19 UUID_CHRCTR_BATTERY_LEVEL
	0X2A22 UUID_CHRCTR_KEYBOARD_INPUT
	0X2A23 UUID_CHRCTR_SYSTEM_ID 
	0X2A25 UUID_CHRCTR_SERIAL_NUMBER
	0X2A26 UUID_CHRCTR_FIRMWARE
	0X2A32 UUID_CHRCTR_KEYBOARD_OUTPUT
	0X2A33 UUID_CHRCTR_MOUSE_INPUT
	0X2A4A UUID_CHRCTR_HID_INFO
	0X2A4B UUID_CHRCTR_REPORT_MAP
	0X2A4C UUID_CHRCTR_HID_CTRL_POINT
	0X2A4D UUID_CHRCTR_REPORT
	0X2A4E UUID_CHRCTR_PROTOCOL_MODE
	)

	//modified_name
	(
	0x14 MAX_NAME_LEN
	0x16 ADV_DATA_NAME_LEN
	0X20 SPACE
	
	)
	/* GATT Specifications*/
	(
	0X2900 CHARACTERTIC_EXTENDED_PROPERTIES
	0X2901 CHARACTERTIC_USER_DESCRIPTION
	0X2902 CLIENT_CHARACTERTIC_CONFIGURATION
	0X2903 SERVER_CHARACTERTIC_CONFIGURATION
	0X2904 CHARACTERTIC_PRESENTATION_FORMAT
	0X2905 CHARACTERTIC_AGGREGATE
	0X2906 VALID_RANGE
	0X2907 EXTERNAL_REPORT_REFERENCE
	0X2908 REPORT_REFERENCE
	0X290B ENVIR_SENSING_CONFIGURATION
	0X290C ENVIR_SENSING_MEASUREMENT
	0X290D ENVIR_SENSING_TRIGGER_SETTING
	)
	/* LE L2CAP CID */
	(
	0x04 LE_L2CAP_CID_ATT
	0x05 LE_L2CAP_CID_SIGNAL
	0x06 LE_L2CAP_CID_SMP
	)

	//LE address type
	(
	0 LE_ADDR_TYPE_PUBLIC
	1 LE_ADDR_TYPE_RANDOM
	)
	//LE address type bitmap
	(
	7 LE_RECEIVER_ADDR_BIT
	6 LE_SENDER_ADDR_BIT
	)
	//LE SCAN TYPE
	(
	0x00 LE_SCAN_TYPE_PASSIVE //no SCAN_REQ shall be sent
	0x01 LE_SCAN_TYPE_ACTIVE
	)

	//LE SCAN ENABLE
	(
	0x00 LE_SCAN_DISABLE
	0x01 LE_SCAN_ENABLE
	0x0101 LE_ACTIVE_SCAN_ENABLE
	)


//	le_state_map 0-2 is reserved for state_inconn,state_insniff and state_sco
(
3 lestate_got_first_packet
4 lestate_encryption
5 lestate_update_param
6 lestate_update_map
)

// 	le mode
(
0 lemode_idle
1 lemode_slave
3 lemode_master
)

(
0x3 LLID_LE_LL
0x1 LLID_CONTINUE
0x2 LLID_START
)

(
4 LE_TX_BUFF_COUNT
3 LE_TX_BUFF_UPDATE_LOOPCNT //LE_TX_BUFF_COUNT-1
)

(
27 LE_MAX_PAKET_LEN
)

//mem_le_enc_state
(
0 FLAG_LE_ENC_NULL
1 FLAG_LE_RCV_ENC_START
2 FLAG_LE_ENC_PAUSE
3 FLAG_LE_RCV_START_ENC_RSP
4 FLAG_LE_SEND_START_ENC_RSP
0xff FLAG_LE_ENC_END
)

//mem_le_pairing_state
(
0x0 FLAG_LE_PAIRING_NULL
0x1 FLAG_LE_PAIRING_START
0x2 FLAG_LE_PAIRING_SEND_RECURITY_REQ
0X3 FLAG_LE_PAIRING_RCV_PAIRING_REQ
0x4 FLAG_LE_PAIRING_AFTER_AUTH
0x5 FLAG_LE_PAIRING_SEND_START_ENC_RSP
0x6 FLAG_LE_PARING_SEND_ENC_INFORMATION
0x7 FLAG_LE_PARING_SEND_MASTER_IDENTIFICATION 
0X8 FLAG_LE_PARING_SEND_INDENTITY_INFORMATION
0xff FLAG_LE_PAIRING_END
)


/*LE secure connect state */
(
0x00 LE_SC_STAT_NULL
0x01 LE_SC_STAT_RECEIVE_PUBLIC_KEY
0x02 LE_SC_STAT_WAIT_SEND_PUBLIC_KEY
0x03 LE_SC_STAT_SEND_PUBLIC_KEY
0x04 LE_SC_STAT_RECEIVE_RANDOM
0x05 LE_SC_STAT_SEND_RANDOM
0x06 LE_SC_STAT_RECEIVE_DHKEY
0x07 LE_SC_STAT_WAIT_CONFIRM_GKEY
0x08 LE_SC_STAT_PASSKEY_WAIT_CONFIRM
)

(
0 FLAG_LE_SC_CONFRIM_NULL
1 FLAG_LE_SC_CONFRIM_GKEY_OK
)


(
3 LE_CONTINUE_TYPE_PUBLIC_KEY
)

(
0 LE_INITATOR_LTK_BIT
1 LE_INITATOR_IRK_BIT
2 LE_INITATOR_CSRK_BIT
)

(
0X00 FLAG_LE_NO_BONDING_NO_MITM
0X01 FLAG_LE_BONDING_NO_MITM
0X04 FLAG_LE_NO_BONDING_MITM
0X05 FLAG_LE_BONDING_MITM
0X09 FLAG_LE_BONDING_NO_MITM_SECURE
0X0D FLAG_LE_BONDING_MITM_SECURE

2 LE_AUTH_MITM_BIT
3 LE_AUTH_SECURE_CONNECTION_PAIRING_BIT
)

(
0X00	LE_PAIRING_MODE_NONE
0X01	LE_PAIRING_MODE_LAGACY_JUSTWORK
0X02	LE_PAIRING_MODE_LAGACY_PASSKEY
0x81	LE_PAIRING_MODE_SECURE_CONNECT_JUSTWORK
0x82	LE_PAIRING_MODE_SECURE_CONNECT_NUMERIC
0X83	LE_PAIRING_MODE_SECURE_CONNECT_PASSKEY

7 LE_PAIRING_MODE_SECURE_CONNECT_BIT
)

(
0 FLAG_IOCAP_DISPLAYONLY
1 FLAG_IOCAP_DISPLAYYESNO
2 FLAG_IOCAP_KEYBOARDONLY
3 FLAG_IOCAP_NOINPUTNOOUTPUT
4 FLAG_IOCAP_KEYBOARDDISPLAY

0x00 FLAG_OOB_DATA_FLAG_NO
)

(
0  LE_FIND_BY_TYPE_VAL_RES_NOT_FOUND
1  LE_FIND_BY_TYPE_VAL_RES_FOUND_STARTING_HANDLE
2  LE_FIND_BY_TYPE_VAL_RES_FOUND_ENDING_HANDLE
)

