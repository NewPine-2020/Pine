
memalloc(

1 mem_lmo_header_length
1 mem_lmo_header_opcode
17 mem_lmo_payload
1 mem_lmi_accepted_opcode
1 mem_disconn_reason_send
1 mem_tx_fixed_freq
1 mem_rx_fixed_freq
1 mem_ext_features_page
2 mem_lmpext_ssp_enable
1 mem_remote_sppcap

1 mem_lmp_conn_state
2 mem_soft_timer
1 mem_pincode_state

1 mem_sres_tid
1 mem_accptsco_tid

1 mem_wait_encryption

16 mem_sniff_payload
4 mem_aurand_send_delay_time
)

xmemalloc(
3 mem_lmp_version
2 mem_lmp_subversion
1 mem_local_name_length
3 mem_local_name
64 mem_local_name2
1 mem_local_name_end
1 mem_unsniff2sniff_timer
1 mem_switch_flag
1 mem_role_switch_flag

)

(
	//bit flag:mem_classic_bt_flag
	0 FLAG_SSP_REJECT_JUSTWORK
	1 SHORT_MULT_FLAG
)
	
	(
	//bit map
	0 pair_state_inrand
	1 pair_state_inrand_acpt
	2 pair_state_send_comb
	3 pair_state_recv_comb
	4 pair_state_send_aurand
	5 pair_state_recv_sres
	6 pair_state_recv_aurand
	7 pair_state_send_sres	
	)
	/* LMP opcodes */
	(
	1 LMP_NAME_REQ 
	2 LMP_NAME_RES 
	3 LMP_ACCEPTED 
	4 LMP_NOT_ACCEPTED 
	5 LMP_CLKOFFSET_REQ 
	6 LMP_CLKOFFSET_RES 
	7 LMP_DETACH 
	8 LMP_IN_RAND 
	9 LMP_COMB_KEY 
	10 LMP_UNIT_KEY 
	11 LMP_AU_RAND 
	12 LMP_SRES 
	13 LMP_TEMP_RAND 
	14 LMP_TEMP_KEY 
	15 LMP_ENCRYPTION_MODE_REQ 
	16 LMP_ENCRYPTION_KEY_SIZE_REQ 
	17 LMP_START_ENCRYPTION_REQ 
	18 LMP_STOP_ENCRYPTION_REQ 
	19 LMP_SWITCH_REQ 
	20 LMP_HOLD
	21 LMP_HOLD_REQ
	23 LMP_SNIFF_REQ 
	24 LMP_UNSNIFF_REQ 
	26 LMP_PARK_REQ 
	27 LMP_SET_BROADCAST_SCAN_WINDOW 
	28 LMP_MODIFY_BEACON 
	29 LMP_UNPARK_BD_ADDR_REQ 
	30 LMP_UNPARK_PM_ADDR_REQ 
	31 LMP_INCR_POWER_REQ 
	32 LMP_DECR_POWER_REQ 
	33 LMP_MAX_POWER 
	34 LMP_MIN_POWER 
	35 LMP_AUTO_RATE 
	36 LMP_PREFERRED_RATE 
	37 LMP_VERSION_REQ 
	38 LMP_VERSION_RES 
	39 LMP_FEATURES_REQ 
	40 LMP_FEATURES_RES 
	41 LMP_QUALITY_OF_SERVICE 
	42 LMP_QUALITY_OF_SERVICE_REQ 
	43 LMP_SCO_LINK_REQ 
	44 LMP_REMOVE_SCO_LINK_REQ 
	45 LMP_MAX_SLOT 
	46 LMP_MAX_SLOT_REQ 
	47 LMP_TIMING_ACCURACY_REQ 
	48 LMP_TIMING_ACCURACY_RES 
	49 LMP_SETUP_COMPLETE 
	50 LMP_USE_SEMI_PERMANENT_KEY 
	51 LMP_HOST_CONNECTION_REQ 
	52 LMP_SLOT_OFFSET 
	53 LMP_PAGE_MODE_REQ 
	54 LMP_PAGE_SCAN_MODE_REQ 
	55 LMP_SUPERVISION_TIMEOUT 
	56 LMP_TEST_ACTIVATE
	57 LMP_TEST_CONTROL
	58 LMP_ENC_KEY_SIZE_MASK_REQ
	59 LMP_ENC_KEY_SIZE_MASK_RES
	60 LMP_SET_AFH

	/* simple pairing support */
	61 LMP_ENCAPSULATED_HEADER
	62 LMP_ENCAPSULATED_PAYLOAD
	63 LMP_SIMPLE_PAIRING_CONFIRM
	64 LMP_SIMPLE_PAIRING_NUMBER
	65 LMP_DHKEY_CHECK
	127 LMP_ESCAPE
	127 LMP_ESCAPE_4   /* add 2bytes LMP header support  */   
	)
	/* LMP EXT opcodes, ORed with bit 7 to make difference to nonEXT */
	(
	129 LMP_EXT_ACCEPTED
	130 LMP_NOT_ACCEPTED_EXT
	131 LMP_EXT_FEATURES_REQ
	132 LMP_EXT_FEATURES_RES
	139 LMP_PACKET_TYPE_TABLE_REQ
	140 LMP_EXT_ESCO_LINK_REQ
	141 LMP_EXT_REMOVE_ESCO_REQ
	144 LMP_EXT_CHN_CLASSIFICATION_REQ
	145 LMP_EXT_CHN_CLASSIFICATION
	149 LMP_SNIFF_SUBRATING_REQ
	150 LMP_SNIFF_SUBRATING_RES
	151 LMP_PAUSE_ENCRYPTION_REQ
	152 LMP_RESUME_ENCRYPTION_REQ
	153 LMP_IO_CAP_REQ
	154 LMP_IO_CAP_RES
	161 LMP_PING_REQ
	162 LMP_PING_RES
	
	198 LMP_EXT_USER_ENTER_TEST_MODE //70
	199 LMP_EXT_USER_EXIT_TEST_MODE //71
	200 LMP_EXT_USER_PLAY //72
	201 LMP_EXT_USER_PAUSE //73
	202 LMP_EXT_USER_ENTER_SCO //74
	203 LMP_EXT_USER_EXIT_SCO //75
	204 LMP_EXT_USER_ENTER_OTA
	205 LMP_EXT_USER_EXIT_OTA
	206 LMP_EXIT_USER_POWEROFF
	)
	/* LMP reason codes */
	(
	0x05 AUTHENTICATION_FAILURE_ERROR
	0x06 KEY_MISSING
	0x0b ACL_CONNECTION_ALREADY_EXISTS
	0x0c CMD_DISALLOWED
	0x13 OTHER_END_TERMINATED
	0x15 ABOUT_TO_POEWR_OFF
	0x16 LOCAL_HOST
	0x18 PAIRING_NOT_ALLOWED
	0x19 UNKNOWN_LMP_PDU
	0x1A UNSUPPORTED_LMP_FEATURE 
	0x1F UNSPECIFIED_ERROR
	0x20 UNSUPPORTED_PARAMETERS
	0x21 SWITCH_NOT_ALLOWED
	0x23 TRANSACTION_COLLISION
	0x24 PDU_NOT_ALLOWED
	0x25 ENCRYPTION_MODE_NOT_ACCEPTABLE
	0x2e NOT_SUPPORT_CHN_CLASSIFICATION
	0x37 NOT_SUPPORT_SSP
	)

	/* test mode scenarios */
	(
	0 PAUSE_TEST_MODE
	1 ZERO_PATTERN
	2 ONE_PATTERN
	3 ALT_PATTERN
	4 PSEUDORANDOM
	5 CLOSED_LOOP_BACK_ACL
	6 CLOSED_LOOP_BACK_SCO
	7 ACL_WITHOUT_WHITENING
	8 SCO_WITHOUT_WHITENING
	9 ALT2_PATTERN
	255 EXIT_TEST_MODE
	)
	/* test mode hoppig modes */
	(
	0 FIXED_FREQ
	1 NORMAL_HOP
	)

	/* mem_lmp_tid indicates which type of LMP will be sent */
	(
	0 TID_NORM_REPLY
	1 TID_NORM_SEND
	2 TID_ONE
	3 TID_ZERO
	4 TID_PAIRING
	5 TID_ENCRYPTION
	6 TID_VARIABLE
	7 TID_RX
	)

	/* ============== lmp status ==========*/
	(
	0 lmp_incoming
	1 lmp_outgoing
	2 lmp_reject_msg
	3 lmp_clear_msg
	4 upper_reject_msg
	5 upper_clear_msg
	)

(
0x2ee00 TIMER_ONE_MINUTE //96000*2
80 TIMER_SWITCH_WAITE
12 TIMER_ENPT_WAITE
)

(
0 SWITCH_FLAG_INIT
1 SWITCH_FLAG_ACCEPT
2 SWITCH_FLAG_NOT_ACCEPT
)
(
0 NULL_ENCRYP
1 DONE_ENCRYP
)

